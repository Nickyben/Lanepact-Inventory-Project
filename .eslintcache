[{"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\index.js":"1","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\App.js":"2","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\reportWebVitals.js":"3","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Dashboard.js":"4","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Products.js":"5","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\NavigationBar.js":"6","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Signup.js":"7","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Login.js":"8","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\ForgotPassword.js":"9","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddWareHouse.js":"10","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddProductCategory.js":"11","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddProduct.js":"12","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Statistics.js":"13","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\routes\\PrivateRoute.js":"14","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Home.js":"15","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\AuthNavBar.js":"16","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\HomeNavBar.js":"17","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\Sidebar.js":"18","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\PageHeader.js":"19","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\Page.js":"20","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\SubPage.js":"21","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\ErrorPage.js":"22","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\hoc\\Auxiliary.js":"23","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\reducers\\authReducer.js":"24","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\actions\\authActions.js":"25","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\UI\\Input.js":"26","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\constants\\Colors.js":"27","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\UI\\Form.js":"28","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\constants\\MyFuncs.js":"29","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\reducers\\formReducer.js":"30","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\actions\\formActions.js":"31"},{"size":823,"mtime":1609269230220,"results":"32","hashOfConfig":"33"},{"size":1394,"mtime":1608231844102,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":1988,"mtime":1609249805815,"results":"37","hashOfConfig":"33"},{"size":139,"mtime":1607693211658,"results":"38","hashOfConfig":"33"},{"size":1276,"mtime":1607712156112,"results":"39","hashOfConfig":"33"},{"size":5155,"mtime":1609280433124,"results":"40","hashOfConfig":"33"},{"size":3776,"mtime":1609353397758,"results":"41","hashOfConfig":"33"},{"size":1921,"mtime":1609353806302,"results":"42","hashOfConfig":"33"},{"size":2616,"mtime":1609275753210,"results":"43","hashOfConfig":"33"},{"size":2429,"mtime":1609273479499,"results":"44","hashOfConfig":"33"},{"size":2889,"mtime":1609279990750,"results":"45","hashOfConfig":"33"},{"size":1029,"mtime":1609023996638,"results":"46","hashOfConfig":"33"},{"size":640,"mtime":1608290277493,"results":"47","hashOfConfig":"33"},{"size":4325,"mtime":1609356054117,"results":"48","hashOfConfig":"33"},{"size":810,"mtime":1608140196228,"results":"49","hashOfConfig":"33"},{"size":899,"mtime":1608217916352,"results":"50","hashOfConfig":"33"},{"size":1901,"mtime":1608147684473,"results":"51","hashOfConfig":"33"},{"size":1145,"mtime":1609098969323,"results":"52","hashOfConfig":"33"},{"size":1102,"mtime":1609356946862,"results":"53","hashOfConfig":"33"},{"size":700,"mtime":1608762976869,"results":"54","hashOfConfig":"33"},{"size":151,"mtime":1608231841389,"results":"55","hashOfConfig":"33"},{"size":69,"mtime":1608290097423,"results":"56","hashOfConfig":"33"},{"size":823,"mtime":1607950259740,"results":"57","hashOfConfig":"33"},{"size":11827,"mtime":1609354164984,"results":"58","hashOfConfig":"33"},{"size":8144,"mtime":1609247923784,"results":"59","hashOfConfig":"33"},{"size":89,"mtime":1608662863592,"results":"60","hashOfConfig":"33"},{"size":11152,"mtime":1609275856611,"results":"61","hashOfConfig":"33"},{"size":3936,"mtime":1608753797388,"results":"62","hashOfConfig":"33"},{"size":662,"mtime":1609269060254,"results":"63","hashOfConfig":"33"},{"size":224,"mtime":1609280203067,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1d57mbr",{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"xs6l9d",{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"67"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"67"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"67"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"67"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"67"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\index.js",[],["155","156"],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\App.js",["157","158","159","160","161","162"],"import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Login from './views/Login';\nimport SignUp from './views/Signup';\nimport ForgotPassword from './views/ForgotPassword';\nimport AddWareHouse from './views/AddWareHouse';\nimport AddProductCategory from './views/AddProductCategory';\nimport AddProduct from './views/AddProduct';\nimport Statistics from './views/Statistics';\nimport PrivateRoute from './routes/PrivateRoute';\nimport Home from './views/Home';\nimport Error from './views/ErrorPage';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/signUp\">\n\t\t\t\t\t<SignUp />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/forgot-password\">\n\t\t\t\t\t<ForgotPassword />\n\t\t\t\t</Route>\n\n\t\t\t\t<PrivateRoute path=\"/home\">\n\t\t\t\t\t<Home />\n\t\t\t\t</PrivateRoute>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Error/> \n\t\t\t\t</Route>\n\t\t\t\t{/* <Route path=\"/add-warehouse\">\n\t\t\t\t\t<AddWareHouse />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/add-product-category\">\n\t\t\t\t\t<AddProductCategory />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/add-product\">\n\t\t\t\t\t<AddProduct />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/statistics\">\n\t\t\t\t\t<Statistics />\n\t\t\t\t</Route> */}\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\reportWebVitals.js",[],["163","164"],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Dashboard.js",["165","166","167","168","169"],"import React, { Component } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport styled, { css } from 'styled-components';\r\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport Auxiliary from '../hoc/Auxiliary';\r\n\r\nconst styles = {\r\n\tcard: {\r\n\t\t//\tpadding: 15,\r\n\t\tmarginBottom: 15,\r\n\t\t//margin: 10,\r\n\t},\r\n};\r\n\r\nconst generalItems = [\r\n\t{\r\n\t\ttitle: 'Top Products Purchased',\r\n\t\tsubtitle: 'Products bought most',\r\n\t\timage: 'https://www.incimages.com/uploaded_files/image/1920x1080/GettyImages-1158242033_411023.jpg',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Top Products Sold',\r\n\t\tsubtitle: 'Products sold most',\r\n\t\timage: 'https://q3p9g6n2.rocketcdn.me/wp-content/ml-loads/2014/08/online-shopping-ecommerce-ss-1920.png',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Top Clients',\r\n\t\tsubtitle: 'Our top clients',\r\n\t\timage: 'https://s3-ap-southeast-1.amazonaws.com/titan-live/Contents/Source/companypurchase.jpg',\r\n\t},\r\n];\r\n\r\nexport const DashBoardGeneral = () => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row xs={1} sm={2} md={3}>\r\n\t\t\t\t{generalItems.map(({ title, image, subtitle }, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Col key={index}>\r\n\t\t\t\t\t\t\t<Card style={styles.card}>\r\n\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={image} />\r\n\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">{subtitle}</Card.Subtitle>\r\n\t\t\t\t\t\t\t\t\t{/* <Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t\tSome quick example text \tthe card's content.\r\n\t\t\t\t\t\t\t\t\t\t</Card.Text> */}\r\n\t\t\t\t\t\t\t\t\t{/* <Card.Link href=\"#\">Card Link</Card.Link>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Link href=\"#\">Another Link</Card.Link> */}\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\">View</Button>\r\n\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst Dashboard = ({}) => {\r\n\treturn (\r\n\t\t<Auxiliary>\r\n\t\t\t\t<DashBoardGeneral/>\r\n\t\t</Auxiliary>\r\n\t);\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Products.js",["170"],"import React, { Component } from 'react';\r\n\r\nfunction Products() {\r\n\treturn (\r\n\t<h1>The Products</h1>\r\n\t);\r\n}\r\n\r\nexport default Products;\r\n",["171","172"],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\NavigationBar.js",[],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Signup.js",["173","174","175","176"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport AuthNavBar from '../components/AuthNavBar';\r\nimport Form from '../components/UI/Form';\r\n\r\nconst SignUp = () => {\r\n\tconst [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n\tconst { state } = useLocation();\r\n\t\tconst [formActionDone, setFormActionDone] = useState(false);\r\n\r\n\tconst authHandler = (inputValues, location, history) => {\r\n\r\n\t\t//alert(Object.values(inputValues));\r\n\r\n\t\tsetFormActionDone(true);\r\n\t\tsetTimeout(() => setFormActionDone(false), 5000);\r\n\t\t//console.log(inputValues);\r\n\t\t// const to = '/home';\r\n\t\t// if (location.pathname !== to) {\r\n\t\t// \thistory.push(to);\r\n\t\t// }\r\n\r\n\t};;\r\n\r\n\tif (redirectToReferrer === true) {\r\n\t\treturn <Redirect to={state?.from || '/'} />;\r\n\t}\r\n\r\n\tconst signupInputItems = [\r\n\t\t{\r\n\t\t\tid: 'signupFirstName',\r\n\t\t\tlabel: 'First name',\r\n\t\t\tplaceholder: 'first name',\r\n\t\t\ttype: 'text',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'person',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'signupLastName',\r\n\t\t\tlabel: 'Last name',\r\n\t\t\tplaceholder: 'last name',\r\n\t\t\ttype: 'text',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'person',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'signupEmail',\r\n\t\t\tlabel: 'Email',\r\n\t\t\tplaceholder: 'email address',\r\n\t\t\ttype: 'email',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'person',\r\n\t\t\t},\r\n\t\t\temail: true,\r\n\t\t\terrorMsg: 'Please provide a valid email address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'signupBusinessName',\r\n\t\t\tlabel: 'Business name',\r\n\t\t\tplaceholder: 'your business name',\r\n\t\t\ttype: 'text',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'person',\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'signupPhoneNumber',\r\n\t\t\tlabel: 'Phone number',\r\n\t\t\tplaceholder: 'phone number',\r\n\t\t\ttype: 'number',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'phone',\r\n\t\t\t},\r\n\t\t\tphoneNumber: true,\r\n\t\t\terrorMsg: 'Please provide a valid 10-digits phone number ',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'signupPassword1',\r\n\t\t\tlabel: 'Password',\r\n\t\t\tplaceholder: 'password',\r\n\t\t\ttype: 'password',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'lock',\r\n\t\t\t},\r\n\t\t\tcheck: 'confirmPasswordMatch',\r\n\t\t\tpassword: true,\r\n\t\t\terrorMsg: 'Password must be at least 7 characters.',\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tid: 'signupPassword2',\r\n\t\t\tlabel: 'Confirm Password',\r\n\t\t\tplaceholder: 'confirm password',\r\n\t\t\ttype: 'password',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'lock',\r\n\t\t\t},\r\n\t\t\tcheck: 'confirmPasswordMatch',\r\n\t\t\tpassword: true,\r\n\t\t\terrorMsg: 'Password must be at least 7 characters.',\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"page-wrapper\">\r\n\t\t\t\t\t<AuthNavBar />\r\n\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tid={'signUpForm'}\r\n\t\t\t\t\t\t\t\ttitle={'Signup'}\r\n\t\t\t\t\t\t\t\titems={signupInputItems}\r\n\t\t\t\t\t\t\t\tsubmitTitle={'SIGNUP'}\r\n\t\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\t\tformActionDone={formActionDone}\r\n\t\t\t\t\t\t\t\tformSuccessMsg={`Signup was successful! proceed to login.`}\r\n\t\t\t\t\t\t\t\tspecificCheck=\"confirmPasswordMatch\"\r\n\t\t\t\t\t\t\t\tdoNotClearInputs\r\n\t\t\t\t\t\t\t\tformAction={(inputValues) => authHandler(inputValues, location, history)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p className=\"forgot-password text-right\">\r\n\t\t\t\t\t\t\t\tAlready registered? <Link to={'/login'}>login</Link>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SignUp;\r\n\r\n// <div className=\"auth-wrapper\">\r\n// \t<div className=\"auth-inner\">\r\n// \t\t<form>\r\n// \t\t\t<h3 className={'auth-title'}>Signup</h3>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>First name</label>\r\n// \t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"first name\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>Last name</label>\r\n// \t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"last name\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>Email address</label>\r\n// \t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"enter email\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>Business name</label>\r\n// \t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\" your business name\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>Phone number</label>\r\n// \t\t\t\t<input type=\"email\" className=\"form-control\" placeholder=\"phone number\" />\r\n// \t\t\t</div>\r\n// \t\t\t<div className=\"form-group\">\r\n// \t\t\t\t<label>Password</label>\r\n// \t\t\t\t<input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n// \t\t\t</div>\r\n// \t\t\t<Button className=\"btn btn-primary btn-block\" onClick={() => {}}>\r\n// \t\t\t\tSignup\r\n// \t\t\t</Button>\r\n// \t\t\t<p className=\"forgot-password text-right\">\r\n// \t\t\t\tAlready registered\r\n// \t\t\t\t<Link to={'/login'}> sign-in</Link>\r\n// \t\t\t</p>\r\n// \t\t</form>\r\n// \t</div>\r\n// </div>;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Login.js",["177","178","179","180","181"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport AuthNavBar from '../components/AuthNavBar';\r\nimport Form from '../components/UI/Form';\r\n\r\nconst Login = () => {\r\n\tconst [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n\tconst { state } = useLocation();\r\n\r\n\tconst authHandler = (inputValues, location, history) => {\r\n\t\t//this is for testing\r\n\t\tconst to = '/home';\r\n\t\tif (location.pathname !== to) {\r\n\t\t\thistory.push(to);\r\n\t\t}\r\n\r\n\t\tconsole.log(inputValues);\r\n\t\t//...code the authentication here\r\n\t\t// fakeAuth.authenticate(() => {\r\n\t\t// \tsetRedirectToReferrer(true);\r\n\t\t// });\r\n\t};\r\n\r\n\tif (redirectToReferrer === true) {\r\n\t\treturn <Redirect to={state?.from || '/'} />;\r\n\t}\r\n\tconst loginInputItems = [\r\n\t\t{\r\n\t\t\tid: 'loginEmail',\r\n\t\t\tlabel: 'Email',\r\n\t\t\tplaceholder: 'email address',\r\n\t\t\ttype: 'email',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'person',\r\n\t\t\t},\r\n\t\t\temail: true,\r\n\t\t\terrorMsg: 'Please provide a valid email address',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'loginPassword',\r\n\t\t\tlabel: 'Password',\r\n\t\t\tplaceholder: 'password',\r\n\t\t\ttype: 'password',\r\n\t\t\t\trequired: true,\r\n\t\t\tclassName: 'form-control',\r\n\t\t\ticon: {\r\n\t\t\t\ticonName: 'lock',\r\n\t\t\t},\r\n\t\t\tpassword: true,\r\n\t\t\terrorMsg: 'Password must be at least 7 characters.',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: 'loginRememberMe',\r\n\t\t\ttype: 'checkbox',\r\n\t\t\thideLabel: true,\r\n\t\t\thideFloatingLabel:true,\r\n\t\t\tshowErrorMsg: false,\r\n\t\t\tinitialValue: false,\r\n\t\t\tinitialValidity: true,\r\n\t\t\tclassName: 'custom-control-input',\r\n\t\t\tparentClassName: 'custom-control custom-checkbox',\r\n\t\t\tExtraComponent: () => (\r\n\t\t\t\t<label className=\"custom-control-label\" htmlFor=\"loginRememberMe\">\r\n\t\t\t\t\tRemember me\r\n\t\t\t\t</label>\r\n\t\t\t),\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"page-wrapper\">\r\n\t\t\t\t\t<AuthNavBar />\r\n\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tid={'loginForm'}\r\n\t\t\t\t\t\t\t\ttitle={'Login'}\r\n\t\t\t\t\t\t\t\titems={loginInputItems}\r\n\t\t\t\t\t\t\t\tsubmitTitle={'LOGIN'}\r\n\t\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\t\tdoNotClearInputs\r\n\t\t\t\t\t\t\t\tformAction={(inputValues) => authHandler(inputValues, location, history)}>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t<p className=\"forgot-password text-right\">\r\n\t\t\t\t\t\t\t\tForgot <Link to={'/forgot-password'}>password</Link>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n\r\n{\r\n\t/* <form>\r\n\t\t\t\t\t\t\t\t<h3 className={'auth-title'}>Login</h3>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label>Email address</label>\r\n\t\t\t\t\t\t\t\t\t<FormInput hideLabel hideFloatingLabel email type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t\t\t\t<FormInput hideLabel hideFloatingLabel password type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"custom-control custom-checkbox\">\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n\t\t\t\t\t\t\t\t\t\t<label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n\t\t\t\t\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-block\"\r\n\t\t\t\t\t\t\t\t\tonClick={authHandler.bind(this, location, history)}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<p className=\"forgot-password text-right\">\r\n\t\t\t\t\t\t\t\t\tForgot <Link to={'/forgot-password'}>password</Link>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</form>\r\n */\r\n}\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\ForgotPassword.js",["182","183","184","185","186","187"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\nimport AuthNavBar from '../components/AuthNavBar';\r\nimport Form from '../components/UI/Form';\r\n\r\nconst forgotPasswordInputItems = [\r\n\t{\r\n\t\tid: 'loginEmail',\r\n\t\tlabel: 'Password Retrieve Email',\r\n\t\tplaceholder: 'email address',\r\n\t\ttype: 'email',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t\temail: true,\r\n\t\terrorMsg: 'Please provide a valid email address',\r\n\t},\r\n];\r\nconst ForgotPassword = () => {\r\n\tconst [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n\tconst { state } = useLocation();\r\n\tconst [formActionDone, setFormActionDone] = useState(false);\r\n\r\n\tconst authHandler = (inputValues, location, history) => {\r\n\t\t//alert(Object.values(inputValues));\r\n\r\n\t\tsetFormActionDone(true);\r\n\t\tsetTimeout(() => setFormActionDone(false), 5000);\r\n\t\t//console.log(inputValues);\r\n\t\t// const to = '/home';\r\n\t\t// if (location.pathname !== to) {\r\n\t\t// \thistory.push(to);\r\n\t\t// }\r\n\t};\r\n\r\n\tif (redirectToReferrer === true) {\r\n\t\treturn <Redirect to={state?.from || '/'} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"page-wrapper\">\r\n\t\t\t\t\t<AuthNavBar />\r\n\t\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tid={'forgotPasswordForm'}\r\n\t\t\t\t\t\t\t\ttitle={'Forgot Password?'}\r\n\t\t\t\t\t\t\t\titems={forgotPasswordInputItems}\r\n\t\t\t\t\t\t\t\tsubmitTitle={'Send Email'}\r\n\t\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\t\tdoNotClearInputs\r\n\t\t\t\t\t\t\t\tformAction={(inputValues) => authHandler(inputValues, location, history)}></Form>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n\r\n\r\n\t\t\r\n};\r\n\r\nexport default ForgotPassword;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddWareHouse.js",["188","189","190","191","192","193"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport Form from '../components/UI/Form';\r\n\r\nconst addWarehouseInputItems = [\r\n\t{\r\n\t\tid: 'warehouseName',\r\n\r\n\t\tlabel: 'Warehouse name',\r\n\t\tplaceholder: 'name',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'warehouseDescription',\r\n\t\tlabel: 'Description',\r\n\t\tplaceholder: 'describe warehouse',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'warehouseLocation',\r\n\t\tlabel: 'Warehouse location',\r\n\t\tplaceholder: 'location',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst AddWareHouse = () => {\r\n\tconst { state } = useLocation();\r\n\r\n\tconst [formActionDone, setFormActionDone] = useState(false);\r\n\r\n\tconst addWarehouseHandler = (inputValues, location, history) => {\r\n\t\t//alert(Object.values(inputValues));\r\n\r\n\t\tsetFormActionDone(true);\r\n\t\tsetTimeout(() => setFormActionDone(false), 5000);\r\n\t\t//console.log(inputValues);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tid={'addWarehouseForm'}\r\n\t\t\t\t\t\t\ttitle={'Add Warehouse'}\r\n\t\t\t\t\t\t\titems={addWarehouseInputItems}\r\n\t\t\t\t\t\t\tsubmitTitle={'ADD'}\r\n\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\tformActionDone={formActionDone}\r\n\t\t\t\t\t\t\tformSuccessMsg={'Warehouse has been added Successfully!'}\r\n\t\t\t\t\t\t\tformAction={(inputValues) => addWarehouseHandler(inputValues, location, history)}></Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default AddWareHouse;\r\n\r\n{\r\n\t/* <div className=\"auth-wrapper\">\r\n\t<div className=\"auth-inner\">\r\n\t\t<form>\r\n\t\t\t<h3 className={'auth-title'}>Add Warehouse</h3>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Warehouse name</label>\r\n\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"name\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Description</label>\r\n\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"describe warehouse\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Warehouse location</label>\r\n\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"location\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Button className=\"btn btn-primary btn-block\" onClick={() => {}}>\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t</div>\r\n</div>; */\r\n}\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddProductCategory.js",["194","195","196","197","198"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport Form from '../components/UI/Form';\r\nimport { useState } from 'react';\r\n\r\nconst addCategoryInputItems = [\r\n\t{\r\n\t\tid: 'categoryName',\r\n\r\n\t\tlabel: 'Category name',\r\n\t\tplaceholder: 'category name',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'categoryDescription',\r\n\t\tlabel: 'Description',\r\n\t\tplaceholder: 'describe category',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n];\r\n\r\nconst AddProductCategory = () => {\r\n\tconst { state } = useLocation();\r\n\tconst [formActionDone, setFormActionDone] = useState(false);\r\n\r\n\tconst addCategoryHandler = (inputValues, location, history) => {\r\n\t\t//alert(Object.values(inputValues));\r\n\r\n\t\t//AFTER SUBMITTING THE FORM\r\n\t\tsetFormActionDone(true);\r\n\t\tsetTimeout(() => setFormActionDone(false), 5000);\r\n\t\t//console.log(inputValues);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tid={'addCategoryForm'}\r\n\t\t\t\t\t\t\ttitle={'Add Category'}\r\n\t\t\t\t\t\t\titems={addCategoryInputItems}\r\n\t\t\t\t\t\t\tsubmitTitle={'ADD'}\r\n\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\tformActionDone={formActionDone}\r\n\t\t\t\t\t\t\tformSuccessMsg={'Category has been added Successfully!'}\r\n\t\t\t\t\t\t\tformAction={(inputValues) => addCategoryHandler(inputValues, location, history)}></Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default AddProductCategory;\r\n\r\n// return (\r\n// \t\t<div className=\"auth-wrapper\">\r\n// \t\t\t<div className=\"auth-inner\">\r\n// \t\t\t\t<form>\r\n// \t\t\t\t\t<h3 className={'auth-title'}>Add Product Category</h3>\r\n\r\n// \t\t\t\t\t<div className=\"form-group\">\r\n// \t\t\t\t\t\t<label>Category name</label>\r\n// \t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"category name\" />\r\n// \t\t\t\t\t</div>\r\n\r\n// \t\t\t\t\t<div className=\"form-group\">\r\n// \t\t\t\t\t\t<label>Description</label>\r\n// \t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"describe category\" />\r\n// \t\t\t\t\t</div>\r\n\r\n// \t\t\t\t\t<Button className=\"btn btn-primary btn-block\" onClick={() => {}}>\r\n// \t\t\t\t\t\tSubmit\r\n// \t\t\t\t\t</Button>\r\n// \t\t\t\t</form>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\AddProduct.js",["199","200","201","202","203","204","205","206"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, useLocation, Redirect } from 'react-router-dom';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport Form from '../components/UI/Form';\r\n\r\nconst addCategoryInputItems = [\r\n\t{\r\n\t\tid: 'productName',\r\n\r\n\t\tlabel: 'Product name',\r\n\t\tplaceholder: 'product name',\r\n\t\ttype: 'text',\r\n\t\trequired: true,\r\n\t\tclassName: 'form-control',\r\n\t\ticon: {\r\n\t\t\ticonName: 'person',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'productCategory',\r\n\t\tlabel: 'Product category',\r\n\t\trequired: true,\r\n\t\tSpecialInput: ({ onChange, onBlur, onFocus, id, value }) => (\r\n\t\t\t<DropdownButton\r\n\t\t\t\talignRight\r\n\t\t\t\ttitle={value ? value : 'Categories'}\r\n\t\t\t\t//id=\"dropdown-menu-align-right\"\r\n\t\t\t\tid={id}\r\n\t\t\t\tonSelect={(e) => onChange({ target: { value: e } })} //{categorySelectHandler}\r\n\t\t\t\tonBlur={onBlur}\r\n\t\t\t\tonFocus={onFocus}\r\n\t\t\t\tinputMode='text'\r\n\t\t\t\tdefaultValue={'Category'}>\r\n\t\t\t\t{productCategories.map((cat, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Dropdown.Item active={cat === value} key={index} eventKey={cat}>\r\n\t\t\t\t\t\t\t{cat}\r\n\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<Dropdown.Divider />\r\n\t\t\t\t{/* <Dropdown.Item eventKey=\"some link\">some link</Dropdown.Item> */}\r\n\t\t\t</DropdownButton>\r\n\t\t),\r\n\t},\r\n];\r\n\r\nconst productCategories = ['Cat 1', 'Cat 2', 'Cat 3', 'Cat 4', 'Cat 5', 'Cat 6', 'Cat 7', 'Cat 8'];\r\nconst AddProduct = () => {\r\n\tconst { state } = useLocation();\r\n\tconst [formActionDone, setFormActionDone] = useState(false);\r\n\tconst [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n\tconst categorySelectHandler = (e) => {\r\n\t\tconsole.log(e);\r\n\t\tsetSelectedCategory(e);\r\n\t};\r\n\r\n\tconst addProductHandler = (inputValues, location, history) => {\r\n\t\t//AFTER SUBMITTING THE FORM\r\n\t\t//alert(Object.values(inputValues));\r\n\t\tsetFormActionDone(true);\r\n\t\tsetTimeout(() => setFormActionDone(false), 5000);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\trender={({ location, history }) => (\r\n\t\t\t\t<div className=\"auth-wrapper\">\r\n\t\t\t\t\t<div className=\"auth-inner\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tid={'addProductForm'}\r\n\t\t\t\t\t\t\ttitle={'Add Product'}\r\n\t\t\t\t\t\t\titems={addCategoryInputItems}\r\n\t\t\t\t\t\t\tsubmitTitle={'ADD'}\r\n\t\t\t\t\t\t\tformErrorMsg={'Please provide valid credentials!'}\r\n\t\t\t\t\t\t\tformActionDone={formActionDone}\r\n\t\t\t\t\t\t\tformSuccessMsg={'Product has been added Successfully!'}\r\n\t\t\t\t\t\t\tformAction={(inputValues) => addProductHandler(inputValues, location, history)}></Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default AddProduct;\r\n\r\n// <div className=\"form-group\">\r\n// \t<label>Product name</label>\r\n// \t<input type=\"text\" className=\"form-control\" placeholder=\" product name\" />\r\n// </div>\r\n\r\n// <div className=\"form-group\">\r\n// \t<label>Product category</label>\r\n\r\n// </div>\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Statistics.js",[],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\routes\\PrivateRoute.js",["207","208","209","210"],"import React from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, useParams, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n\tconst isAuthenticated = true; //check for auth eg. in redux\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t\r\n\t\t\t{...rest}\r\n\t\t\trender={({ location }) => {\r\n\t\t\t\treturn !!isAuthenticated? (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: '/login',\r\n\t\t\t\t\t\t\tstate: { from: location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\Home.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Switch, Route, Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport HomeNavBar from '../components/HomeNavBar';\r\n\r\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport Sidebar from '../components/Sidebar';\r\nimport './styles/Dashboard.css';\r\n\r\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\n\r\n// Be sure to include styles at some point, probably during your bootstraping\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Page from '../components/Page';\r\nimport { toTitleCase, dashed } from '../constants/MyFuncs';\r\nimport AddProduct from './AddProduct';\r\nimport AddWareHouse from './AddWareHouse';\r\nimport AddProductCategory from './AddProductCategory';\r\nimport Dashboard, { DashBoardGeneral } from './Dashboard';\r\n\r\nconst homeStructure = [\r\n\t{\r\n\t\tid: 'dashboard',\r\n\t\tcomponent: Dashboard,\r\n\t\ticon: 'table',\r\n\t\tsubNav: [\r\n\t\t\t{ id: 'general', component: DashBoardGeneral },\r\n\t\t\t{ id: 'profit', component: ({}) => <h1>Profit</h1> },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 'inventory',\r\n\t\tcomponent: ({}) => <h1>Inventory</h1>,\r\n\t\ticon: 'archive',\r\n\t\tsubNav: [],\r\n\t},\r\n\t{\r\n\t\tid: 'items',\r\n\t\tcomponent: ({}) => <h1>Items</h1>,\r\n\t\ticon: 'tag',\r\n\t\tsubNav: [\r\n\t\t\t{ id: 'overview', component: () => <h1>Overview</h1> },\r\n\t\t\t{ id: 'add store', component: AddWareHouse },\r\n\t\t\t{ id: 'add category', component: AddProductCategory },\r\n\t\t\t{ id: 'add product', component: AddProduct },\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tid: 'clients',\r\n\t\tcomponent: ({}) => <h1>Clients</h1>,\r\n\t\ticon: 'address-book',\r\n\t\tsubNav: [],\r\n\t},\r\n];\r\n\r\nconst styles = {\r\n\ttoggler: {\r\n\t\tbackgroundColor: '#bbb',\r\n\t\tcolor: 'blue',\r\n\t},\r\n\tnavText: {\r\n\t\tcolor: '#333',\r\n\t},\r\n\tsubNavText: {\r\n\t\tpaddingLeft: 60,\r\n\t\ttextAlign: 'left',\r\n\t\tcolor: '#555',\r\n\t},\r\n};\r\nfunction Home() {\r\n\tconst { url, path } = useRouteMatch();\r\n\tconst [sidebarIsOpen, setSidebarIsOpen] = useState(false);\r\n\r\n\tconst sidebarControlled = (isOpen) => {\r\n\t\tsetSidebarIsOpen(isOpen);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HomeNavBar url={url} />\r\n\t\t\t<div>\r\n\t\t\t\t<Route\r\n\t\t\t\t\trender={({ location, history }) => (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<SideNav\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttop: 56,\r\n\t\t\t\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\t\t\t\tposition:'fixed',\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonToggle={(isOpen) => sidebarControlled(isOpen)}\r\n\t\t\t\t\t\t\t\tonSelect={(selected) => {\r\n\t\t\t\t\t\t\t\t\tconst to = url + '/' + selected;\r\n\t\t\t\t\t\t\t\t\tif (location.pathname !== to) {\r\n\t\t\t\t\t\t\t\t\t\thistory.push(to);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<SideNav.Toggle style={styles.toggler} expanded={true} />\r\n\t\t\t\t\t\t\t\t<SideNav.Nav defaultSelected={homeStructure[0].id}>\r\n\t\t\t\t\t\t\t\t\t{homeStructure.map((page, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<NavItem eventKey={dashed(page.id)} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<NavIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`fa fa-fw fa-${page.icon}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ fontSize: '1.75em', color: '#556677' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</NavIcon>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<NavText style={styles.navText}>{toTitleCase(page.id)}</NavText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{page.subNav.map((subPage, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavItem eventKey={`${dashed(page.id)}/${dashed(subPage.id)}`} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavText\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ ...styles.navText, ...styles.subNavText }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{toTitleCase(subPage.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</NavText>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</SideNav.Nav>\r\n\t\t\t\t\t\t\t</SideNav>\r\n\r\n\t\t\t\t\t\t\t<main style={{ marginTop: 56, marginLeft: sidebarIsOpen ? 240 : 64 }}>\r\n\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t<Route exact path={path}>\r\n\t\t\t\t\t\t\t\t\t\t<h1>Home</h1>\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t\t<Route path={`${path}/:pageId`}>\r\n\t\t\t\t\t\t\t\t\t\t<Page pages={homeStructure} />\r\n\t\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t<Route exact path={path} component={(props) => <h1>home</h1>} />\r\n\t\t\t\t\t\t\t\t<Route path={`${path}/devices`} component={(props) => <h1>devices</h1>} /> */}\r\n\t\t\t\t\t\t\t</main>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\AuthNavBar.js",["227"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction AuthNavBar() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Link className=\"navbar-brand\" to={'/login'}>\r\n\t\t\t\t\t\tInventory Management\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/login'}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/signUp'}>\r\n\t\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AuthNavBar","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\HomeNavBar.js",["228"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeNavBar({url}) {\r\n\treturn (\r\n\t\t<div className=\"top-navbar\">\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light fixed-top no-shadow\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Link className=\"navbar-brand\" to={'/home'}>\r\n\t\t\t\t\t\tLanepact Inventory\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav \">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={`${url}/search`}>\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/login'}>\r\n\t\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeNavBar;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\Sidebar.js",["229","230","231","232","233","234","235"],"import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//import '../views/styles/Dashboard.css';\r\n\r\nconst Sidebar = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div class=\"sidebar\">\r\n\t\t\t\t<nav class=\"sidebar-nav\">\r\n\t\t\t\t\t<ul class=\"nav\">\r\n\t\t\t\t\t\t<li class=\"nav-title\">Nav Title</li>\r\n\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-speedometer\"></i> Nav item\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-speedometer\"></i> With badge\r\n\t\t\t\t\t\t\t\t<span class=\"badge badge-primary\">NEW</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li class=\"nav-item nav-dropdown\">\r\n\t\t\t\t\t\t\t<a class=\"nav-link nav-dropdown-toggle\" href=\"#\">\r\n\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-puzzle\"></i> Nav dropdown\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<ul class=\"nav-dropdown-items\">\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-puzzle\"></i> Nav dropdown item\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<a class=\"nav-link\" href=\"#\">\r\n\t\t\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-puzzle\"></i> Nav dropdown item\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li class=\"nav-item mt-auto\">\r\n\t\t\t\t\t\t\t<a class=\"nav-link nav-link-success\" href=\"https://coreui.io\">\r\n\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-cloud-download\"></i> Download CoreUI\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t\t<a class=\"nav-link nav-link-danger\" href=\"https://coreui.io/pro/\">\r\n\t\t\t\t\t\t\t\t<i class=\"nav-icon cui-layers\"></i> Try CoreUI\r\n\t\t\t\t\t\t\t\t<strong>PRO</strong>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<button class=\"sidebar-minimizer brand-minimizer\" type=\"button\"></button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Sidebar;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\PageHeader.js",["236"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PageHeader({ title, titleLink }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"subnavbar\"\r\n\t\t\tstyle={{\r\n\t\t\t\ttop:56,\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tmarginBottom:56,\r\n\t\t\t\tposition:\"fixed\",\r\n\t\t\t\tzIndex:500,\r\n       \tborderTopWidth: 1,\r\n\t\t\t\tborderLeftWidth: 1,\r\n\t\t\t\tborderTopColor: '#ddd',\r\n        borderLeftColor: '#eee',\r\n\t\t\t\tborderTopStyle: 'solid',\r\n\t\t\t\tborderLeftStyle: 'solid',\r\n\t\t\t}}>\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light\" >\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Link className=\"navbar-brand\" to={`${titleLink}`}>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{/* <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n\t\t\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/login'}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={'/signUp'}>\r\n\t\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t */}\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PageHeader;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\Page.js",["237","238","239"],"import React, { useState } from 'react';\r\nimport { Switch, Route, Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport PageHeader from './PageHeader';\r\nimport SubPage from './SubPage';\r\nimport Auxiliary from '../hoc/Auxiliary';\r\nimport { toTitleCase, unDashed } from '../constants/MyFuncs';\r\n\r\nconst Page = ({ pages }) => {\r\n\tconst { url, path } = useRouteMatch();\r\n\tconst { pageId } = useParams();\r\n\tconst page = pages.find((p) => p.id === unDashed(pageId));\r\n\tconst PageComponent = page ? page.component : () => <h1>Page Not Found!</h1>;\r\n\r\n\t//alert(path)\r\n\treturn (\r\n\t\t<Auxiliary>\r\n\t\t\t{page && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<PageHeader title={toTitleCase(page.id)} titleLink={url} />\r\n\t\t\t\t\t<div style={{ marginTop: 132 }}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path={url}>\r\n\t\t\t\t\t\t\t\t<PageComponent />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path={`${url}/:subPageId`}>\r\n\t\t\t\t\t\t\t\t<SubPage subPages={page.subNav} />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t{!page && <PageHeader title={toTitleCase(unDashed(pageId))} titleLink={url} />}\r\n\t\t</Auxiliary>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\SubPage.js",["240","241","242"],"import React, { useState } from 'react';\r\nimport { Switch, Route, Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { unDashed } from '../constants/MyFuncs';\r\n\r\nconst SubPage = ({subPages}) => {\r\n\tconst { url, path } = useRouteMatch();\r\n  const { subPageId } = useParams();\r\n  const subPage = subPages.find((subP) => subP.id === unDashed(subPageId));\r\n  const PageComponent = subPage ? subPage.component : () => <h1>Page Not Found!</h1>;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path={url}>\r\n\t\t\t\t\t<PageComponent />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${url}/:subPageId`}>\r\n\t\t\t\t\t<h1>Page Not Found</h1>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SubPage;","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\views\\ErrorPage.js",["243"],"import React, { Component } from 'react';\r\n\r\nfunction ErrorPage({message}) {\r\n\treturn <h1>Oops! Page not found!</h1>;\r\n}\r\n\r\nexport default ErrorPage;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\hoc\\Auxiliary.js",[],["244","245"],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\reducers\\authReducer.js",["246"],"import { INDICATE_TRIED_TO_AUTO_LOGIN, AUTHENTICATE, LOGOUT } from '../actions/authActions';\r\n\r\nconst initialState = {\r\n\tidToken: null,\r\n\tuserId: null,\r\n\tpushToken: null,\r\n\tuserEmail: null,\r\n\ttriedAutoLogin: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INDICATE_TRIED_TO_AUTO_LOGIN: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t// idToken: action.idToken,\r\n\t\t\t\t// userId: action.userId,\r\n\t\t\t\t// pushToken: action.pushToken,\r\n\t\t\t\ttriedAutoLogin: true,\r\n\r\n\t\t\t\t//isLoading: false,\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase AUTHENTICATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tidToken: action.idToken,\r\n\t\t\t\tuserId: action.userId,\r\n\t\t\t\ttriedAutoLogin: true,\r\n\t\t\t};\r\n\t\tcase LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t// ...initialState\r\n\t\t\t\t...initialState,\r\n\t\t\t\ttriedAutoLogin: true,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\actions\\authActions.js",["247"],"// export const SIGNUP = 'SIGNUP';\r\n// export const LOGIN = 'LOGIN';\r\nexport const AUTHENTICATE = 'AUTHENTICATE';\r\nexport const INDICATE_TRIED_TO_AUTO_LOGIN = 'INDICATE_TRIED_TO_AUTO_LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nlet timer;\r\n\r\nexport const tryAutoLogin = () => {\r\n\treturn { type: INDICATE_TRIED_TO_AUTO_LOGIN }; ///???\r\n};\r\n\r\nexport const authenticate = (idToken, userId, expiryTime, pushToken, userEmail) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(setLogoutTimer(expiryTime)); // check well!!!!\r\n\t\tdispatch({\r\n\t\t\ttype: AUTHENTICATE,\r\n\t\t\tidToken: idToken,\r\n\t\t\tuserId: userId,\r\n\t\t\tuserEmail: userEmail,\r\n\t\t\tpushToken,\r\n\t\t});\r\n\t};\r\n};\r\n\r\nexport const signup = (userEmail, userPassword) => {\r\n\t//console.log(userEmail, userPassword);\r\n\treturn async (dispatch) => {\r\n\t\t//this fetch request creates an new user and returns info about the new account\r\n\r\n\t\tif (userEmail && userPassword) {\r\n\t\t\t//SEND REQUEST FOR SIGNUP\r\n\r\n\t\t\tlet response;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${''}`, {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\temail: userEmail,\r\n\t\t\t\t\t\tpassword: userPassword,\r\n\t\t\t\t\t\treturnSecureToken: true,\r\n\t\t\t\t\t}),\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err.message.toLowerCase().includes('network'))\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Hmm...Something is wrong with your Network Connection. Please check your connection!'\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t//HANDLE BAD RESPONSE\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst responseErrorData = await response.json();\r\n\t\t\t\tconst respErrMsg = responseErrorData.error.message;\r\n\t\t\t\tlet errMsg;\r\n\r\n\t\t\t\tswitch (respErrMsg) {\r\n\t\t\t\t\tcase 'EMAIL_EXISTS': {\r\n\t\t\t\t\t\terrMsg = `An account already exists with this email ${userEmail}!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'TOO_MANY_ATTEMPTS_TRY_LATER': {\r\n\t\t\t\t\t\terrMsg = `You have made too many attempts. Kindly try again later!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'OPERATION_NOT_ALLOWED': {\r\n\t\t\t\t\t\terrMsg = `We are so sorry but, you are not allowed to do this!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\terrMsg = 'Hmm...Something went wrong';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//make sure to handle all errors, example: network error\r\n\r\n\t\t\t\t//console.log(errMsg);\r\n\t\t\t\tthrow new Error(errMsg);\r\n\t\t\t}\r\n\r\n\t\t\tconst responseData = await response.json();\r\n\r\n\t\t\t//LOGGING IN AFTER SIGN-UP???!!!\r\n\t\t\tdispatch(\r\n\t\t\t\tauthenticate(\r\n\t\t\t\t\t//CHECK IF YOU CAN STORE THE USERS PUSH TOKEN EACH TIME THEY LOGIN(even for auto login) (SINCE THEIR PUSH TOKEN SHOULD CHANGE ON EVERY NEW DEVICE)\r\n\t\t\t\t\tresponseData.idToken,\r\n\t\t\t\t\tresponseData.localId,\r\n\t\t\t\t\tparseInt(responseData.expiresIn) * 1000,\r\n\t\t\t\t\t'pushToken',\r\n\t\t\t\t\tresponseData.email\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\t//dispatch({ type: SIGNUP, token: responseData.idToken, userId: responseData.localId });\r\n\t\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 1000);\r\n\t\t\tsaveDataToStorage(responseData.idToken, responseData.localId, expiryDate, 'pushToken', responseData.email); //just like you stored it in redux store(mem), but here, in the device storage\r\n\t\t} else {\r\n\t\t\t//console.log('EMPTY FIELDS');\r\n\t\t\tthrow new Error('PLEASE FILL IN ALL FIELDS!');\r\n\t\t}\r\n\t};\r\n};\r\n\r\n//YOU CAN ALSO CHOOSE TO COMBINE THE TWO ACTION CREATORS INTO JUST ONE ACTION CREATOR(FUNC)\r\nexport const login = (userEmail, userPassword) => {\r\n\t//console.warn(userEmail, userPassword);\r\n\treturn async (dispatch) => {\r\n\t\t//this fetch request creates an new user and returns info about the new account\r\n\t\tif (userEmail && userPassword) {\r\n\t\t\tlet response;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = await fetch(\r\n\t\t\t\t\t`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${''}`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\temail: userEmail,\r\n\t\t\t\t\t\t\tpassword: userPassword,\r\n\t\t\t\t\t\t\treturnSecureToken: true,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err.message.toLowerCase().includes('network'))\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Hmm...Something is wrong with your Network Connection. Please check your connection!'\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst responseErrorData = await response.json();\r\n\t\t\t\tconst respErrMsg = responseErrorData.error.message;\r\n\t\t\t\tlet errMsg;\r\n\r\n\t\t\t\tswitch (respErrMsg) {\r\n\t\t\t\t\tcase 'EMAIL_NOT_FOUND': {\r\n\t\t\t\t\t\terrMsg = `There is no account with email ${userEmail}, please create an account!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'INVALID_PASSWORD': {\r\n\t\t\t\t\t\terrMsg = `The password you entered is incorrect`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'USER_DISABLED': {\r\n\t\t\t\t\t\terrMsg = `We are so sorry but, this account has been disabled!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\terrMsg = 'Hmm...Something went wrong!';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//make sure to handle all errors, example: network error\r\n\t\t\t\t//console.warn(errMsg);\r\n\t\t\t\tthrow new Error(errMsg);\r\n\t\t\t}\r\n\r\n\t\t\tconst responseData = await response.json();\r\n\t\t\t//console.log(responseData)\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tauthenticate(\r\n\t\t\t\t\t//CHECK IF YOU CAN STORE THE USERS PUSH TOKEN EACH TIME THEY LOGIN(even for auto login) (SINCE THEIR PUSH TOKEN SHOULD CHANGE ON EVERY NEW DEVICE)\r\n\t\t\t\t\tresponseData.idToken,\r\n\t\t\t\t\tresponseData.localId,\r\n\t\t\t\t\tparseInt(responseData.expiresIn) * 1000,\r\n\t\t\t\t\t'pushToken',\r\n\t\t\t\t\tresponseData.email\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\t//getting the future date/time when the token expires\r\n\t\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 1000);\r\n\t\t\tsaveDataToStorage(responseData.idToken, responseData.localId, expiryDate, 'pushToken', responseData.email); //just like you stored it in redux store(mem), but here, in the device storage\r\n\t\t} else {\r\n\t\t\t//console.log('EMPTY FIELDS');\r\n\t\t\tthrow new Error('PLEASE FILL IN ALL FIELDS!');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const logout = async () => {\r\n\tclearLogoutTimer();\r\n\t//await AsyncStorage.removeItem('userData'); //you can still choose to wait for this\r\n\treturn {\r\n\t\ttype: LOGOUT,\r\n\t};\r\n};\r\n\r\nconst clearLogoutTimer = () => {\r\n\tif (timer) {\r\n\t\tclearTimeout(timer);\r\n\t}\r\n};\r\n\r\nconst setLogoutTimer = (tokenExpiryTime) => {\r\n\treturn (dispatch) => {\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\t// REM: I ignored the yellow box msg about long timers\r\n\t\t\tdispatch(logout());\r\n\t\t}, tokenExpiryTime);\r\n\t};\r\n};\r\n\r\nconst saveDataToStorage = async (idToken, userId, tokenExpiry, pushToken, emailAddress) => {\r\n\ttry {\r\n\t\tconst jsonValue = JSON.stringify({\r\n\t\t\tidToken: idToken,\r\n\t\t\tuserId: userId,\r\n\t\t\texpiryDate: tokenExpiry.toISOString(),\r\n\t\t\tuserEmail: emailAddress,\r\n\t\t\t//pushToken: ....,//check if this is possible\r\n\t\t});\r\n\t\t//await AsyncStorage.setItem('userData', jsonValue);\r\n\t} catch (e) {\r\n\t\tthrow new Error('There was a problem with storage in your device!');\r\n\t}\r\n};\r\n\r\nexport const verifyPassword = (userEmail, userPassword) => {\r\n\treturn async (dispatch) => {\r\n\t\t//this fetch request creates an new user and returns info about the new account\r\n\t\tif (userEmail && userPassword) {\r\n\t\t\tlet response;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = await fetch(\r\n\t\t\t\t\t`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${''}`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\temail: userEmail,\r\n\t\t\t\t\t\t\tpassword: userPassword,\r\n\t\t\t\t\t\t\treturnSecureToken: true,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err.message.toLowerCase().includes('network'))\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Hmm...Something is wrong with your Network Connection. Please check your connection!'\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst responseErrorData = await response.json();\r\n\t\t\t\tconst respErrMsg = responseErrorData.error.message;\r\n\t\t\t\tlet errMsg;\r\n\r\n\t\t\t\tswitch (respErrMsg) {\r\n\t\t\t\t\tcase 'EMAIL_NOT_FOUND': {\r\n\t\t\t\t\t\terrMsg = `There is no account with email the ${userEmail}! please logout try logging in again`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'INVALID_PASSWORD': {\r\n\t\t\t\t\t\terrMsg = `The password you entered as old password is incorrect!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'USER_DISABLED': {\r\n\t\t\t\t\t\terrMsg = `We are so sorry but, this account has been disabled!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\terrMsg = 'Hmm...Something went wrong!';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//make sure to handle all errors, example: network error\r\n\t\t\t\t//console.warn(errMsg);\r\n\t\t\t\tthrow new Error(errMsg);\r\n\t\t\t}\r\n\r\n\t\t\tconst responseData = await response.json();\r\n\t\t\t//console.log(responseData)\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tauthenticate(\r\n\t\t\t\t\t//CHECK IF YOU CAN STORE THE USERS PUSH TOKEN EACH TIME THEY LOGIN(even for auto login) (SINCE THEIR PUSH TOKEN SHOULD CHANGE ON EVERY NEW DEVICE)\r\n\t\t\t\t\tresponseData.idToken,\r\n\t\t\t\t\tresponseData.localId,\r\n\t\t\t\t\tparseInt(responseData.expiresIn) * 1000,\r\n\t\t\t\t\t'pushToken',\r\n\t\t\t\t\tresponseData.email\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\t//getting the future date/time when the token expires\r\n\t\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 1000);\r\n\t\t\tsaveDataToStorage(responseData.idToken, responseData.localId, expiryDate, 'pushToken', responseData.email); //just like you stored it in redux store(mem), but here, in the device storage\r\n\t\t} else {\r\n\t\t\t//console.log('EMPTY FIELDS');\r\n\t\t\t// if (userEmail === null || userPassword === null) {\r\n\t\t\t// \tthrow new Error('OPERATION NOT ALLOWED, PLEASE LOGOUT AND LOGIN AGAIN!');\r\n\t\t\t// } else {\r\n\t\t\tthrow new Error('PLEASE FILL IN THE FIELDS CORRECTLY!');\r\n\t\t\t//\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const changePassword = (idToken, newUserPassword) => {\r\n\tconsole.warn(idToken, newUserPassword);\r\n\r\n\treturn async (dispatch) => {\r\n\t\tif (idToken && newUserPassword) {\r\n\t\t\tlet response;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = await fetch(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${''}`, {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tidToken: idToken,\r\n\t\t\t\t\t\tpassword: newUserPassword,\r\n\t\t\t\t\t\treturnSecureToken: true,\r\n\t\t\t\t\t}),\r\n\t\t\t\t});\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err.message.toLowerCase().includes('network'))\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Hmm...Something is wrong with your Network Connection. Please check your connection!'\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tconst responseErrorData = await response.json();\r\n\t\t\t\tconst respErrMsg = responseErrorData.error.message;\r\n\t\t\t\tlet errMsg;\r\n\r\n\t\t\t\tswitch (respErrMsg) {\r\n\t\t\t\t\tcase 'INVALID_ID_TOKEN': {\r\n\t\t\t\t\t\terrMsg = `You are currently not logged in, please log in again!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'WEAK_PASSWORD': {\r\n\t\t\t\t\t\terrMsg = `The password you entered is too weak, please enter a stronger password!`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\terrMsg = 'Hmm...Something went wrong!';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//make sure to handle all errors, example: network error\r\n\t\t\t\t//console.warn(errMsg);\r\n\t\t\t\tthrow new Error(errMsg);\r\n\t\t\t}\r\n\r\n\t\t\tconst responseData = await response.json();\r\n\t\t\t//console.log(responseData)\r\n\r\n\t\t\tdispatch(\r\n\t\t\t\tauthenticate(\r\n\t\t\t\t\t//CHECK IF YOU CAN STORE THE USERS PUSH TOKEN EACH TIME THEY LOGIN(even for auto login) (SINCE THEIR PUSH TOKEN SHOULD CHANGE ON EVERY NEW DEVICE)\r\n\t\t\t\t\tresponseData.idToken,\r\n\t\t\t\t\tresponseData.localId,\r\n\t\t\t\t\tparseInt(responseData.expiresIn) * 1000,\r\n\t\t\t\t\t'pushToken',\r\n\t\t\t\t\tresponseData.email\r\n\t\t\t\t)\r\n\t\t\t);\r\n\r\n\t\t\t//getting the future date/time when the token expires\r\n\t\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 1000);\r\n\t\t\tsaveDataToStorage(responseData.idToken, responseData.localId, expiryDate, 'pushToken', responseData.email); //just like you stored it in redux store(mem), but here, in the device storage\r\n\t\t} else {\r\n\t\t\t//console.log('EMPTY FIELDS');\r\n\t\t\tthrow new Error('PLEASE FILL IN THE FIELDS CORRECTLY!');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const changeEmail = (idToken, userEmail) => {};\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\UI\\Input.js",["248","249","250","251","252"],"//import Icon from 'react-native-vector-icons/FontAwesome';\r\n//import { Input as RNElemInput } from 'react-native-elements';\r\nimport React, { useEffect, useReducer, useState } from 'react';\r\nimport Colors from '../../constants/Colors';\r\n\r\n//import ItemIcon from './ItemIcon';\r\n\r\nconst INPUT_FOCUS = 'INPUT_FOCUS';\r\nconst INPUT_CHANGE = 'INPUT_CHANGE';\r\nconst INPUT_BLUR = 'INPUT_BLUR';\r\nconst INPUT_SUBMIT = 'INPUT_SUBMIT';\r\n\r\nconst inputReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INPUT_FOCUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tgainedFocus: true,\r\n\t\t\t\tlostFocus: false,\r\n\t\t\t\t//alignText: 'justify'\r\n\t\t\t};\r\n\r\n\t\tcase INPUT_CHANGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvalue: action.value,\r\n\t\t\t\tvalidity: action.validity,\r\n\t\t\t\tlostFocus: false,\r\n\t\t\t\thasFocus: true, //action.hasFocus,//isTouched: action.isTouched\r\n\t\t\t\t// alignText: 'justify',\r\n\t\t\t};\r\n\r\n\t\tcase INPUT_BLUR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\thasFocus: false,\r\n\t\t\t\tgainedFocus: false,\r\n\t\t\t\tlostFocus: true,\r\n\t\t\t\t//alignText: state.value.length > 0 ? 'center' : 'justify',\r\n\t\t\t};\r\n\t\tcase INPUT_SUBMIT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidity: false,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nconst FormInput = ({\r\n\tid,\r\n\tclassName,\r\n\tparentClassName,\r\n\ttype,\r\n\tinitialValue,\r\n\tinitialValidity,\r\n\tonInputChange,\r\n\trequired,\r\n\temail,\r\n\tpassword,\r\n\tphoneNumber,\r\n\tmin,\r\n\tmax,\r\n\ttextType,\r\n\tminLength,\r\n\tmaxLength,\r\n\tstyle,\r\n\tinputContainerStyle,\r\n\tinputStyle,\r\n\tlabel,\r\n\tExtraComponent,\r\n\tSpecialInput,\r\n\thideLabel,\r\n\terrorMsg,\r\n\tsuccessMsg,\r\n\ttextInputProps,\r\n\tsubmitted,\r\n\tsubmitAction,\r\n\tsecureText,\r\n\tformState,\r\n\tsingleInput,\r\n\trectInput,\r\n\tclear,\r\n\tnewValue,\r\n\tonTextChanged,\r\n\thideIcon,\r\n\ticon,\r\n\ttouchableIcon,\r\n\tfloatingLabel,\r\n\thideFloatingLabel,\r\n\tplaceholder,\r\n\tshowErrorMsg,\r\n\tformHasError,\r\n\t...others\r\n}) => {\r\n\tconst toggler = type === 'checkbox';\r\n\r\n\tconst [inputState, dispatchAction] = useReducer(inputReducer, {\r\n\t\tvalue: initialValue ? initialValue : toggler ? false : '',\r\n\t\tvalidity: initialValidity ? initialValidity : !required ? true : false,\r\n\t\thasFocus: false,\r\n\t\tlostFocus: false,\r\n\t\tgainedFocus: false,\r\n\t\t// alignText: 'justify'\r\n\t});\r\n\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\r\n\t//console.warn(id, inputState.validity)\r\n\r\n\tconst toggleShowPassword = () => {\r\n\t\tsetShowPassword((p) => !p);\r\n\t};\r\n\r\n\tconst textChangeHandler = (event) => {\r\n\t\tconst text = event.target.value;\r\n\t\tconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t\tconst emailText = text.toLowerCase();\r\n\r\n\t\tconst phoneNumberRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n\t\tlet isValid = true;\r\n\r\n\t\t//for requirements\r\n\t\tif (required && text.trim().length === 0) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\t//for email\r\n\t\tif (email && !emailRegex.test(emailText)) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\t//for passwords\r\n\t\tif (password && (text.length < 7 || (minLength != null && text.length < minLength))) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\tif (phoneNumber && !phoneNumberRegex.test(text)) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\t//for numerical data\r\n\t\tif (min != null && +text < min) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\tif (max != null && +text > max) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\t//for strings\r\n\t\tif (minLength != null && text.length < minLength) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\t\tif (maxLength != null && text.length > maxLength) {\r\n\t\t\tisValid = false;\r\n\t\t}\r\n\r\n\t\tdispatchAction({\r\n\t\t\ttype: INPUT_CHANGE,\r\n\t\t\tvalue: toggler ? !inputState.value : text,\r\n\t\t\tvalidity: isValid,\r\n\t\t\thasFocus: true,\r\n\t\t});\r\n\r\n\t\tonTextChanged && onTextChanged(text);\r\n\t};\r\n\r\n\tconst lostFocusHandler = () => {\r\n\t\tdispatchAction({ type: INPUT_BLUR });\r\n\t};\r\n\r\n\tconst gainedFocusHandler = () => {\r\n\t\tdispatchAction({ type: INPUT_FOCUS });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tinputState.hasFocus ||\r\n\t\t\tinputState.gainedFocus ||\r\n\t\t\tinputState.lostFocus ||\r\n\t\t\tinitialValidity === true ||\r\n\t\t\t!required\r\n\t\t) {\r\n\t\t\tonInputChange &&\r\n\t\t\t\tonInputChange(id, inputState.value, inputState.validity, inputState.gainedFocus, inputState.lostFocus);\r\n\t\t}\r\n\t}, [inputState, onInputChange, id, initialValidity, required]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (submitted) {\r\n\t\t\tdispatchAction({ type: INPUT_SUBMIT });\r\n\t\t}\r\n\t}, [submitted]);\r\n\r\n\treturn (\r\n\t\t//REMINDER: Edit inputs are not working properly when you submit with first input Empty\r\n\t\t<div className=\"form-group\">\r\n\t\t\t{!hideLabel && !(inputState.value.length > 0 && inputState.hasFocus && true) && (\r\n\t\t\t\t<label>{label ? label : placeholder ? placeholder : 'Input Label'}</label>\r\n\t\t\t)}\r\n\r\n\t\t\t{inputState.value.length > 0 && inputState.hasFocus && !hideFloatingLabel && (\r\n\t\t\t\t<label style={{ ...styles.floatingLabel }}>\r\n\t\t\t\t\t{floatingLabel ? floatingLabel : label ? label : 'Placeholder'}\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.inputContainer,\r\n\t\t\t\t\tborderBottomColor: inputState.gainedFocus ? Colors.primary : '#bbb',\r\n\t\t\t\t\tpadding: rectInput ? 5 : styles.inputContainer.padding,\r\n\t\t\t\t\tborderWidth: rectInput ? 1.5 : 0,\r\n\t\t\t\t\t...inputContainerStyle,\r\n\t\t\t\t}}\r\n\t\t\t\tclassName={parentClassName ? parentClassName : 'parentClassName'}>\r\n\t\t\t\t{!hideIcon && (\r\n\t\t\t\t\t<div style={{ marginLeft: rectInput ? 0 : 10 }}>\r\n\t\t\t\t\t\t{/* <ItemIcon\r\n\t\t\t\t\t\t\tonTouch={icon && icon.touchable && icon.onTouch}\r\n\t\t\t\t\t\t\tbgColor={icon.bgColor || Colors.primary + '22'}\r\n\t\t\t\t\t\t\tname={icon ? icon.iconName : 'clipboard'}\r\n\t\t\t\t\t\t\tborderRadius={icon && icon.bgBorderRadius}\r\n\t\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\t\tcolor={icon && icon.iconColor ? icon.iconColor : Colors.primary}\r\n\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!SpecialInput && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\t// {...props}\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\tclassName={className}\r\n\t\t\t\t\t\tname={id}\r\n\t\t\t\t\t\tvalue={newValue}\r\n\t\t\t\t\t\t//style={{ ...styles.input, ...inputStyle }}\r\n\t\t\t\t\t\tonChange={textChangeHandler}\r\n\t\t\t\t\t\tonBlur={lostFocusHandler}\r\n\t\t\t\t\t\tonFocus={gainedFocusHandler}\r\n\t\t\t\t\t\tplaceholder={placeholder ? placeholder : 'placeholder'}\r\n\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* {password &&\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t <ItemIcon\r\n\t\t\t\t\t\tonTouch={toggleShowPassword}\r\n\t\t\t\t\t\tbgColor={'transparent'}\r\n\t\t\t\t\t\tname={showPassword ? 'eye-off' : 'eye'}\r\n\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\tcolor={icon && icon.iconColor ? icon.iconColor : Colors.primary}\r\n\t\t\t\t\t/> \r\n\t\t\t\t\t} */}\r\n\t\t\t\t{SpecialInput && (\r\n\t\t\t\t\t<SpecialInput\r\n\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\tclassName={className}\r\n\t\t\t\t\t\tname={id}\r\n\t\t\t\t\t\tvalue={newValue}\r\n\t\t\t\t\t\tonChange={textChangeHandler}\r\n\t\t\t\t\t\tonBlur={lostFocusHandler}\r\n\t\t\t\t\t\tonFocus={gainedFocusHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{ExtraComponent && <ExtraComponent />}\r\n\t\t\t</div>\r\n\r\n\t\t\t{showErrorMsg !== false && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{((!inputState.validity && inputState.hasFocus && inputState.value.length > 2) ||\r\n\t\t\t\t\t\t(formHasError && !inputState.validity)) && (\r\n\t\t\t\t\t\t<div style={styles.errorMsgWrap}>\r\n\t\t\t\t\t\t\t<p style={styles.errorMsg}>{errorMsg ? errorMsg : 'Invalid field'}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{/* {inputState.validity && inputState.lostFocus && inputState.value.length > 2 && (\r\n\t\t\t\t\t\t<div style={styles.errorMsgWrap}>\r\n\t\t\t\t\t\t\t<p style={styles.successMsg}>{successMsg ? successMsg : 'Valid input'}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)} */}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst styles = {\r\n\tformControl: {\r\n\t\twidth: '100%',\r\n\t\tmarginBottom: 10,\r\n\t},\r\n\tlabel: {\r\n\t\tmarginTop: 5,\r\n\t\tmarginBottom: 7,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tfontSize: 17,\r\n\t\t//fontFamily: 'OpenSansBold',\r\n\t\tcolor: '#555',\r\n\t},\r\n\r\n\tfloatingLabel: {\r\n\t\tcolor: '#777',\r\n\t},\r\n\tinputContainer: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tinput: {\r\n\t\t// alignSelf: 'center',\r\n\t\t//width: '100%',\r\n\t\tflex: 1,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tpaddingVertical: 5,\r\n\t\t//backgroundColor: 'yellow',\r\n\r\n\t\t//\tfontFamily: 'OpenSansRegular',\r\n\t\tfontSize: 18,\r\n\t},\r\n\r\n\terrorMsgWrap: {\r\n\t\tmarginTop: 5,\r\n\t},\r\n\terrorMsg: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#ff7777',\r\n\t\t//padding: 5,\r\n\t\t//paddingBottom:0,\r\n\t\t//fontFamily: 'OpenSansRegular',\r\n\t},\r\n\tsuccessMsg: {\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: '#11ee22',\r\n\t\t//padding: 5,\r\n\t\t//fontFamily: 'OpenSansRe//gular',\r\n\t},\r\n};\r\n\r\nexport default FormInput;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\constants\\Colors.js",[],"C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\components\\UI\\Form.js",["253","254","255","256","257","258","259"],"import React, { useEffect, useCallback, useReducer, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Colors from '../../constants/Colors';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { submitForm } from '../../store/actions/formActions';\r\nimport FormInput from './Input';\r\nimport { objToArr, arrToObj } from '../../constants/MyFuncs';\r\n\r\nconst FORM_INPUT_UPDATE = 'FORM_INPUT_UPDATE';\r\nconst FORM_SUBMIT_CHECK = 'FORM_SUBMIT_CHECK';\r\nconst FORM_SPECIFIC_CHECK = 'FORM_SPECIFIC_CHECK';\r\n\r\nconst SUBMIT_FORM = 'SUBMIT_FORM';\r\nconst FORM_IS_SUBMITTED = 'FORM_IS_SUBMITTED';\r\n\r\nconst formReducer = (state, action) => {\r\n\t//the state is initially the initial state passed to 2nd arg of useReducer\r\n\tswitch (action.type) {\r\n\t\tcase FORM_INPUT_UPDATE:\r\n\t\t\tconst updatedInputValues = {\r\n\t\t\t\t...state.inputValues,\r\n\t\t\t\t[action.input]: action.value, //replacing the key(the input's name)  and value in inputValues Obj with the new text from action.value\r\n\t\t\t};\r\n\t\t\tconst updatedInputValidities = {\r\n\t\t\t\t...state.inputValidities,\r\n\t\t\t\t[action.input]: action.isValid, //replacing the key(the input's name)  and value in inputValidities Obj with the new text from action.value\r\n\t\t\t};\r\n\r\n\t\t\tconst updatedInputFocuses = {\r\n\t\t\t\t...state.inputFocuses,\r\n\t\t\t\t[action.input]: action.inputHasFocus, //replacing the key(the input's name)  and value in inputValidities Obj with the new text from action.value\r\n\t\t\t};\r\n\r\n\t\t\tconst updatedInputBlurs = {\r\n\t\t\t\t...state.inputBlurs,\r\n\t\t\t\t[action.input]: action.inputLostFocus, //replacing the key(the input's name)  and value in inputValidities Obj with the new text from action.value\r\n\t\t\t};\r\n\t\t\tlet updatedFormFocus = false;\r\n\t\t\tlet updatedFormBlur = true;\r\n\t\t\tlet updatedFormValidity = true;\r\n\t\t\tfor (const key in updatedInputValidities) {\r\n\t\t\t\t//GOOD PRACTICE! : once the updatedFormValidity is false for any,\r\n\t\t\t\t// it remains false even if any other inputValidity is true, because the false will override in the AND logic\r\n\t\t\t\tupdatedFormValidity = updatedFormValidity && updatedInputValidities[key];\r\n\t\t\t}\r\n\t\t\tfor (const key in updatedInputFocuses) {\r\n\t\t\t\tupdatedFormFocus = updatedFormFocus || updatedInputFocuses[key];\r\n\t\t\t}\r\n\t\t\tfor (const key in updatedInputBlurs) {\r\n\t\t\t\tupdatedFormBlur = updatedFormBlur && updatedInputBlurs[key];\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinputValues: updatedInputValues,\r\n\t\t\t\tinputValidities: updatedInputValidities,\r\n\t\t\t\tinputFocuses: updatedInputFocuses,\r\n\t\t\t\tinputBlurs: updatedInputBlurs,\r\n\t\t\t\tformValidity: updatedFormValidity,\r\n\t\t\t\tformHasFocus: updatedFormFocus,\r\n\t\t\t\tformLostFocus: updatedFormBlur,\r\n\t\t\t\tshowFormStatus: false,\r\n\t\t\t\tformIsSubmitted: action.formIsSubmitted,\r\n\t\t\t\tnewFormErrorMsg: null,\r\n\t\t\t};\r\n\t\tcase FORM_SUBMIT_CHECK:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tformHasError: action.hasError,\r\n\t\t\t\tshowFormStatus: action.showFormStatus,\r\n\t\t\t\tsubmitForm: !action.hasError,\r\n\t\t\t\tformIsSubmitted: action.formIsSubmitted,\r\n\t\t\t\tnewFormErrorMsg: action.newFormErrorMsg,\r\n\t\t\t};\r\n\r\n\t\tcase FORM_IS_SUBMITTED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tclearInputs: action.clearForm,\r\n\t\t\t};\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nconst Form = ({\r\n\tid,\r\n\ttitle,\r\n\titems,\r\n\tchildren,\r\n\tonSubmit,\r\n\trectInputs,\r\n\tformAction,\r\n\tformStateGetter,\r\n\tsubmitTitle,\r\n\tformActionDone,\r\n\tformErrorMsg,\r\n\tspecificCheck,\r\n\tdoNotClearInputs,\r\n\tformSuccessMsg,\r\n\tonFormSubmitted,\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\t//const mountedRef = useRef(true);\r\n\tconst prevSubmittedForm = useSelector((s) => s.formReducer.submittedFormsData.find((form) => form.id === id));\r\n\tconst lastInputItems = prevSubmittedForm ? prevSubmittedForm.inputValues : null;\r\n\r\n\tconst inputItems = items ? items : [];\r\n\tlet initialInputValues = {};\r\n\tlet initialInputValidities = {};\r\n\tlet initialInputFocuses = {};\r\n\tlet initialInputBlurs = {};\r\n\r\n\tfor (let input of inputItems) {\r\n\t\tif (input.initialValue !== null && input.initialValue !== undefined) {\r\n\t\t\tinitialInputValues[input.id] = input.initialValue;\r\n\t\t\tinitialInputValidities[input.id] = true;\r\n\t\t} else if (!!lastInputItems && !input.password) {\r\n\t\t\tinitialInputValues[input.id] = lastInputItems[input.id];\r\n\t\t\tinitialInputValidities[input.id] = true;\r\n\t\t} else {\r\n\t\t\tinitialInputValues[input.id] = '';\r\n\t\t\tinitialInputValidities[input.id] = false;\r\n\t\t}\r\n\r\n\t\tinitialInputFocuses[input.id] = false;\r\n\t\tinitialInputBlurs[input.id] = false;\r\n\t}\r\n\tconst initialFormState = {\r\n\t\t//recommended instead of mgt of all text states and validity individually with useState() hook\r\n\t\t//initial Values\r\n\t\tinputValues: initialInputValues,\r\n\t\t//initial validity\r\n\t\tinputValidities: initialInputValidities,\r\n\t\t//initial general form validity\r\n\t\tformValidity: false,\r\n\t\tinputFocuses: initialInputFocuses,\r\n\t\tinputBlurs: initialInputBlurs,\r\n\t\tformHasFocus: false,\r\n\t\tformLostFocus: false,\r\n\t\tformId: id,\r\n\t\tformHasError: false,\r\n\t\tformIsSubmitted: false,\r\n\t\tshowFormStatus: false,\r\n\t\tnewFormErrorMsg: null,\r\n\t};\r\n\r\n\tconst [formState, dispatchFormAction] = useReducer(formReducer, initialFormState);\r\n\tconst submitBtnRef = useRef();\r\n\r\n\r\n\tconst formHasSomeEntry = objToArr(formState.inputValues).some((value) =>value && value.length !== 0);\r\n\tconst formInputHandler = useCallback(\r\n\t\t(inputNameOrId, text, validity, hasFocus, lostFocus) => {\r\n\t\t\tdispatchFormAction(\r\n\t\t\t\t//almost just like dispatching in redux\r\n\t\t\t\t//action\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: FORM_INPUT_UPDATE,\r\n\t\t\t\t\tvalue: text,\r\n\t\t\t\t\tisValid: validity,\r\n\t\t\t\t\tinput: inputNameOrId,\r\n\t\t\t\t\tinputHasFocus: hasFocus,\r\n\t\t\t\t\tinputLostFocus: lostFocus,\r\n\t\t\t\t\tformIsSubmitted: false,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\t\t[dispatchFormAction]\r\n\t); //inputName,text, validity\r\n\r\n\tconst formSubmitHandler = useCallback(async () => {\r\n\t\t//console.warn(formState.inputValues, formState.inputValidities)\r\n\t\t//if (!onSubmit()) {\r\n\t\tlet specificData = {};\r\n\t\tconst passTestFunc = () => {\r\n\t\t\t//setError(null);\r\n\t\t\t// setIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\t//dispatching happens here\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tobjToArr(formState.inputValues).every((value) => value.length !== 0) ||\r\n\t\t\t\t\tobjToArr(formState.inputValidities).every((bool) => bool)\r\n\t\t\t\t) {\r\n\t\t\t\t\t//console.warn('valid');\r\n\t\t\t\t\tdispatchFormAction({\r\n\t\t\t\t\t\ttype: FORM_SUBMIT_CHECK,\r\n\t\t\t\t\t\thasError: false, //!onSubmit(),\r\n\t\t\t\t\t\tshowFormStatus: true,\r\n\t\t\t\t\t\tformIsSubmitted: true,\r\n\t\t\t\t\t\tnewFormErrorMsg: null,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t//\tformAction && formAction(formState.inputValues);\r\n\t\t\t\t\tformAction\r\n\t\t\t\t\t\t? dispatch(submitForm(formState.formId, formState.inputValues))&&\r\n\t\t\t\t\t\tformAction(formState.inputValues) \r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t: dispatch(submitForm(formState.formId, formState.inputValues));\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// setError(err.message)\r\n\t\t\t}\r\n\t\t\t// setIsLoading(false);\r\n\t\t\t//props.navigation.goBack();\r\n\t\t};\r\n\r\n\t\tif (!formState.formValidity) {\r\n\t\t\tawait dispatchFormAction({\r\n\t\t\t\ttype: FORM_SUBMIT_CHECK,\r\n\t\t\t\thasError: true, // !onSubmit(),\r\n\t\t\t\tshowFormStatus: true,\r\n\t\t\t\tformIsSubmitted: formState.formIsSubmitted,\r\n\t\t\t\tnewFormErrorMsg: formErrorMsg,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (specificCheck) {\r\n\t\t\t\tif (specificCheck === 'confirmPasswordMatch') {\r\n\t\t\t\t\t//check the password fields\r\n\t\t\t\t\tconst confirmationInputs = inputItems.filter(\r\n\t\t\t\t\t\t(input) => input.password === true && input.check === 'confirmPasswordMatch'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst firstPassword = formState.inputValues[confirmationInputs[0].id];\r\n\t\t\t\t\tlet passwordsMatched = true;\r\n\t\t\t\t\tfor (let input of confirmationInputs) {\r\n\t\t\t\t\t\tpasswordsMatched = formState.inputValues[input.id] === firstPassword && passwordsMatched;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!passwordsMatched) {\r\n\t\t\t\t\t\tawait dispatchFormAction({\r\n\t\t\t\t\t\t\ttype: FORM_SUBMIT_CHECK,\r\n\t\t\t\t\t\t\thasError: true, // !onSubmit(),\r\n\t\t\t\t\t\t\tshowFormStatus: true,\r\n\t\t\t\t\t\t\tformIsSubmitted: formState.formIsSubmitted,\r\n\t\t\t\t\t\t\tnewFormErrorMsg: 'Passwords do not match',\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpassTestFunc();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpassTestFunc();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if (!formState.formValidity) {\r\n\t\t//   Alert.alert('Cannot Submit Invalid Form',\r\n\t\t//     'Please ensure that all input fields are filled correctly!', [{ text: 'Understood ' }])\r\n\t\t//   return;\r\n\t\t// }\r\n\t}, [dispatch, formState]);\r\n\r\n\tuseEffect(() => {\r\n\t\tformStateGetter && formStateGetter(formState);\r\n\t}, [formState]);\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tonSubmit={(e) => {\r\n\t\t\t\t//alert('tried')\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tsubmitBtnRef.current.click();\r\n\t\t\t}}>\r\n\t\t\t{/* <Card style={styles.form}> */}\r\n\t\t\t{title && <h3 className={'auth-title'}>{title}</h3>}\r\n\t\t\t<>\r\n\t\t\t\t{!!inputItems &&\r\n\t\t\t\t\tinputItems.map((input, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\t\t{...input}\r\n\t\t\t\t\t\t\t\tkey={input.id + index}\r\n\t\t\t\t\t\t\t\trectInput={rectInputs}\r\n\t\t\t\t\t\t\t\tonInputChange={formInputHandler}\r\n\t\t\t\t\t\t\t\tonFocus={formInputHandler}\r\n\t\t\t\t\t\t\t\tinitialValue={formState.inputValues[input.id]}\r\n\t\t\t\t\t\t\t\tinitialValidity={formState.inputValidities[input.id]}\r\n\t\t\t\t\t\t\t\tnewValue={\r\n\t\t\t\t\t\t\t\t\tformState.formIsSubmitted && (!doNotClearInputs || input.password)\r\n\t\t\t\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t\t\t\t: formState.inputValues[input.id]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tformHasError={formState.formHasError && formState.showFormStatus && formHasSomeEntry}\r\n\t\t\t\t\t\t\t\tsubmitted={formState.formIsSubmitted && (!doNotClearInputs || input.password)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t{children}\r\n\t\t\t\t{formState.formHasError &&\r\n\t\t\t\t\tformState.showFormStatus &&\r\n\t\t\t\t\tformHasSomeEntry &&(\r\n\t\t\t\t\t\t<p style={styles.formError}>\r\n\t\t\t\t\t\t\t{formState.newFormErrorMsg\r\n\t\t\t\t\t\t\t\t? formState.newFormErrorMsg\r\n\t\t\t\t\t\t\t\t: formErrorMsg\r\n\t\t\t\t\t\t\t\t? formErrorMsg\r\n\t\t\t\t\t\t\t\t: 'Please, ensure that the form is filled correctly!'}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t{!formState.formHasError && formActionDone && !formState.formHasFocus && (\r\n\t\t\t\t\t<p style={{ ...styles.formError, color: '#55ff55', backgroundColor: '#ddffdd' }}>\r\n\t\t\t\t\t\t{formSuccessMsg ? formSuccessMsg : 'Your form has been submitted successfully.'}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* {!formState.formHasError && formState.formIsSubmitted && formState.showFormStatus &&\r\n            <Text style={{ ...styles.formError, color: '#55ff55', backgroundColor: Colors.success }}>\r\n              {formSuccessMsg ? formSuccessMsg :\r\n                'Your form has been submitted successfully.'}</Text>\r\n          } */}\r\n\t\t\t</>\r\n\t\t\t<Button ref={submitBtnRef} className=\"btn btn-primary btn-block\" onClick={formSubmitHandler}>\r\n\t\t\t\t{submitTitle ? submitTitle : 'Submit'}\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport const screenOptions = () => {\r\n\treturn {};\r\n};\r\n\r\nconst styles = {\r\n\tscroll: {\r\n\t\tbackgroundColor: '#fff',\r\n\t},\r\n\t// form: {\r\n\t//   overflow: 'hidden',\r\n\t//   padding: 0,\r\n\t//   margin: 20,\r\n\t// },\r\n\tformTitle: {\r\n\t\twidth: '100%',\r\n\t\tpaddingBottom: 0,\r\n\t\tpadding: 10,\r\n\t\ttextAlign: 'center',\r\n\t\t//backgroundColor: Colors.switchPrimary,\r\n\t\tcolor: Colors.primary, //'#222', //// Colors.switchWhiteAccent,//\r\n\t\tfontSize: 20,\r\n\t\t//fontFamily: 'OpenSansBold',\r\n\t\t//borderBottomColor: '#f3f6f7',\r\n\t\t//borderBottomWidth: 2,\r\n\t},\r\n\tformError: {\r\n\t\t//padding: 20,\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginTop: 20,\r\n\t\ttextAlign: 'center',\r\n\t\tbackgroundColor: Colors.error, //'#f3f6f7',\r\n\t\tborderRadius: 5,\r\n\t\t//fontFamily: 'OpenSansRegular',\r\n\t\tfontSize: 16,\r\n\t\tcolor: '#ff4444',\r\n\t},\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\constants\\MyFuncs.js",["260","261","262","263","264","265","266"],"export const toTitleCase=(str) =>{ return str.replace( /\\w\\S*/g, function(txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); } ); }\r\n\r\nexport const dashed=(str)=>{\r\n  return(\r\n    str.replace(' ', '-')\r\n  )\r\n}\r\n\r\nexport const unDashed = (str) => {\r\n\treturn str.replace('-',' ' );\r\n};\r\n\r\n\r\nexport const rand = (arr) => {\r\n\tlet index = +(Math.random() * arr.length).toFixed(0);\r\n\tconst validIndex = index < arr.length ? index : index === arr.length ? index - 1 : arr.length - 1;\r\n\treturn arr[validIndex];\r\n};\r\n\r\nexport const shuffle = (arr) => {\r\n\tlet newArr = [];\r\n\r\n\tfor (let k = 1; ; k++) {\r\n\t\tlet newElem = rand(arr);\r\n\t\tif (!newArr.includes(newElem)) {\r\n\t\t\tnewArr.push(newElem);\r\n\t\t}\r\n\t\tif (newArr.length === arr.length) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn newArr;\r\n};\r\n\r\nexport const getSince = (when) => {\r\n\tlet postTime = +((new Date().getTime() - when.getTime()) / 1000).toFixed(0);\r\n\tlet timeUnit = 's';\r\n\r\n\tif (postTime >= 60 * 60 * 24 * 7) {\r\n\t\tpostTime = (postTime / (60 * 60 * 24 * 7)).toFixed(0);\r\n\t\ttimeUnit = 'w';\r\n\t} else if (postTime >= 60 * 60 * 24) {\r\n\t\tpostTime = (postTime / (60 * 60 * 24)).toFixed(0);\r\n\t\ttimeUnit = 'd';\r\n\t} else if (postTime >= 60 * 60) {\r\n\t\tpostTime = (postTime / (60 * 60)).toFixed(0);\r\n\t\ttimeUnit = 'h';\r\n\t} else if (postTime >= 60) {\r\n\t\tpostTime = (postTime / 60).toFixed(0);\r\n\t\ttimeUnit = 'm';\r\n\t}\r\n\treturn [postTime, timeUnit, postTime + timeUnit];\r\n};\r\n\r\nexport const getWhen = (when) => {\r\n\tlet postTime = +((new Date().getTime() - when.getTime()) / 1000).toFixed(0);\r\n\tlet timeUnit = 's';\r\n\tlet moment,\r\n\t\textra = '';\r\n\tconst test = new Date().getUTCDate;\r\n\tconst now = new Date();\r\n\tconst hours = when.getHours();\r\n\tconst mins = when.getMinutes();\r\n\tconst weekNum = when.getDay(); //sun==0\r\n\tconst monthNum = when.getMonth(); //jan===0\r\n\tconst dayOfMonthNum = when.getDate();\r\n\tconst year = when.getFullYear();\r\n\r\n\tconst minTime = mins > 9 ? mins : '0' + mins;\r\n\tconst hourTime = hours > 12 ? hours - 12 : hours == 0 ? 12 : hours < 12 ? hours : hours;\r\n\tconst hourMeridian = hours >= 12 ? 'pm' : hours == 0 ? 'am' : hours < 12 ? 'am' : 'am';\r\n\tconst day = dayOfMonthNum > 9 ? dayOfMonthNum : '0' + dayOfMonthNum;\r\n\tconst fullTime = hourTime + ':' + minTime + ' ' + hourMeridian;\r\n\tconst weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\tconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\tconst dateMoment = day + ' ' + months[monthNum];\r\n\r\n\tif (now.getFullYear() !== year) {\r\n\t\tmoment = dateMoment + ', ' + year;\r\n\t\textra = fullTime;\r\n\t} else if (postTime >= 60 * 60 * 24) {\r\n\t\tmoment = dateMoment;\r\n\t\textra = fullTime;\r\n\t} else if (postTime >= 60 * 60) {\r\n\t\tmoment = now.getDay() !== weekNum ? 'Yesterday' : fullTime;\r\n\t\textra = now.getDay() !== weekNum ? fullTime : '';\r\n\t} else {\r\n\t\t//if (postTime >= (60))\r\n\t\tmoment = fullTime;\r\n\t}\r\n\t// } else if (postTime >= (10)){\r\n\t//   moment = postTime+ ' secs ago'\r\n\t// }else {\r\n\t//   moment = 'now'\r\n\t// }\r\n\r\n\treturn [postTime, extra, moment];\r\n};\r\n\r\nexport const randomColor = () => ('#' + ((Math.random() * 0xffffff) << 0).toString(16) + '000000').slice(0, 7);\r\n\r\nexport const objToArr = (obj, arrType = '_1D_Arr') => {\r\n\tlet arr = [];\r\n\tswitch (arrType) {\r\n\t\tcase '_2D_Arr':\r\n\t\t\tfor (let prop in obj) {\r\n\t\t\t\tarr.push([prop, obj[prop]]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '_1D_Arr':\r\n\t\t\tfor (let prop in obj) {\r\n\t\t\t\tarr.push(obj[prop]);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn arr;\r\n};\r\n\r\nexport const arrToObj = (arr, arrType = '_1D_Arr') => {\r\n\tlet obj = {};\r\n\tswitch (arrType) {\r\n\t\tcase '_2D_Arr':\r\n\t\t\tfor (let index in arr) {\r\n\t\t\t\tobj[arr[index][0]] = arr[index][1];\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '_1D_Arr':\r\n\t\t\tfor (let index in arr) {\r\n\t\t\t\tobj[(+index + 1).toString()] = arr[index];\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn obj;\r\n};\r\n\r\nexport const uniqueArray = (arr) => {\r\n\t//note thisArr and arr are the same\r\n\treturn arr.filter((val, i, thisArr) => arr.indexOf(val) === i);\r\n};","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\reducers\\formReducer.js",["267","268"],"//import {} from '../actions/dataActions';\r\nimport { SUBMIT_FORM } from '../actions/formActions';\r\n\r\nconst initialState = {\r\n\tsubmittedFormsData: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SUBMIT_FORM: {\r\n\t\t\tconst prevState = [...state.submittedFormsData];\r\n\t\t\tconst withoutPresentForm = prevState.filter((form) => form.id !== action.id);\r\n\t\t\tconst updatedState = withoutPresentForm.concat({ id: action.id, inputValues: action.inputValues });\r\n\t\t\t//console.warn(updatedState)\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsubmittedFormsData: updatedState,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\treturn state;\r\n};\r\n","C:\\Users\\Nickyben\\ReactProjects\\inventory-project\\src\\store\\actions\\formActions.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":4,"column":27,"nodeType":"275","messageId":"276","endLine":4,"endColumn":33},{"ruleId":"273","severity":1,"message":"277","line":4,"column":50,"nodeType":"275","messageId":"276","endLine":4,"endColumn":54},{"ruleId":"273","severity":1,"message":"278","line":9,"column":8,"nodeType":"275","messageId":"276","endLine":9,"endColumn":20},{"ruleId":"273","severity":1,"message":"279","line":10,"column":8,"nodeType":"275","messageId":"276","endLine":10,"endColumn":26},{"ruleId":"273","severity":1,"message":"280","line":11,"column":8,"nodeType":"275","messageId":"276","endLine":11,"endColumn":18},{"ruleId":"273","severity":1,"message":"281","line":12,"column":8,"nodeType":"275","messageId":"276","endLine":12,"endColumn":18},{"ruleId":"269","replacedBy":"282"},{"ruleId":"271","replacedBy":"283"},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"285","line":5,"column":8,"nodeType":"275","messageId":"276","endLine":5,"endColumn":14},{"ruleId":"273","severity":1,"message":"286","line":5,"column":18,"nodeType":"275","messageId":"276","endLine":5,"endColumn":21},{"ruleId":"273","severity":1,"message":"287","line":6,"column":37,"nodeType":"275","messageId":"276","endLine":6,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":63,"column":20,"nodeType":"290","messageId":"291","endLine":63,"endColumn":22},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"269","replacedBy":"292"},{"ruleId":"271","replacedBy":"293"},{"ruleId":"273","severity":1,"message":"294","line":4,"column":23,"nodeType":"275","messageId":"276","endLine":4,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":4,"column":34,"nodeType":"275","messageId":"276","endLine":4,"endColumn":47},{"ruleId":"273","severity":1,"message":"296","line":5,"column":10,"nodeType":"275","messageId":"276","endLine":5,"endColumn":16},{"ruleId":"273","severity":1,"message":"297","line":10,"column":29,"nodeType":"275","messageId":"276","endLine":10,"endColumn":50},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"296","line":4,"column":10,"nodeType":"275","messageId":"276","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"297","line":9,"column":29,"nodeType":"275","messageId":"276","endLine":9,"endColumn":50},{"ruleId":"298","severity":1,"message":"299","line":104,"column":1,"nodeType":"300","messageId":"301","endLine":133,"endColumn":2},{"ruleId":"273","severity":1,"message":"277","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"296","line":4,"column":10,"nodeType":"275","messageId":"276","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"297","line":24,"column":29,"nodeType":"275","messageId":"276","endLine":24,"endColumn":50},{"ruleId":"273","severity":1,"message":"302","line":27,"column":9,"nodeType":"275","messageId":"276","endLine":27,"endColumn":23},{"ruleId":"273","severity":1,"message":"277","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"303","line":3,"column":62,"nodeType":"275","messageId":"276","endLine":3,"endColumn":70},{"ruleId":"273","severity":1,"message":"304","line":44,"column":10,"nodeType":"275","messageId":"276","endLine":44,"endColumn":15},{"ruleId":"298","severity":1,"message":"299","line":79,"column":1,"nodeType":"300","messageId":"301","endLine":103,"endColumn":2},{"ruleId":"273","severity":1,"message":"277","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"303","line":3,"column":62,"nodeType":"275","messageId":"276","endLine":3,"endColumn":70},{"ruleId":"273","severity":1,"message":"304","line":34,"column":10,"nodeType":"275","messageId":"276","endLine":34,"endColumn":15},{"ruleId":"273","severity":1,"message":"277","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"303","line":3,"column":62,"nodeType":"275","messageId":"276","endLine":3,"endColumn":70},{"ruleId":"273","severity":1,"message":"296","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":16},{"ruleId":"273","severity":1,"message":"304","line":54,"column":10,"nodeType":"275","messageId":"276","endLine":54,"endColumn":15},{"ruleId":"273","severity":1,"message":"305","line":56,"column":9,"nodeType":"275","messageId":"276","endLine":56,"endColumn":25},{"ruleId":"273","severity":1,"message":"306","line":58,"column":8,"nodeType":"275","messageId":"276","endLine":58,"endColumn":29},{"ruleId":"273","severity":1,"message":"277","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":3,"column":23,"nodeType":"275","messageId":"276","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"295","line":3,"column":34,"nodeType":"275","messageId":"276","endLine":3,"endColumn":47},{"ruleId":"273","severity":1,"message":"296","line":4,"column":10,"nodeType":"275","messageId":"276","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"277","line":3,"column":25,"nodeType":"275","messageId":"276","endLine":3,"endColumn":29},{"ruleId":"273","severity":1,"message":"294","line":3,"column":31,"nodeType":"275","messageId":"276","endLine":3,"endColumn":40},{"ruleId":"273","severity":1,"message":"307","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":19},{"ruleId":"273","severity":1,"message":"308","line":6,"column":21,"nodeType":"275","messageId":"276","endLine":6,"endColumn":24},{"ruleId":"273","severity":1,"message":"309","line":6,"column":26,"nodeType":"275","messageId":"276","endLine":6,"endColumn":29},{"ruleId":"273","severity":1,"message":"310","line":6,"column":31,"nodeType":"275","messageId":"276","endLine":6,"endColumn":35},{"ruleId":"273","severity":1,"message":"287","line":6,"column":37,"nodeType":"275","messageId":"276","endLine":6,"endColumn":41},{"ruleId":"273","severity":1,"message":"296","line":6,"column":43,"nodeType":"275","messageId":"276","endLine":6,"endColumn":49},{"ruleId":"273","severity":1,"message":"311","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":20},{"ruleId":"273","severity":1,"message":"312","line":8,"column":8,"nodeType":"275","messageId":"276","endLine":8,"endColumn":15},{"ruleId":"273","severity":1,"message":"313","line":11,"column":19,"nodeType":"275","messageId":"276","endLine":11,"endColumn":25},{"ruleId":"273","severity":1,"message":"314","line":11,"column":27,"nodeType":"275","messageId":"276","endLine":11,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":30,"column":32,"nodeType":"290","messageId":"291","endLine":30,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":35,"column":15,"nodeType":"290","messageId":"291","endLine":35,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":41,"column":15,"nodeType":"290","messageId":"291","endLine":41,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":52,"column":15,"nodeType":"290","messageId":"291","endLine":52,"endColumn":17},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"314","line":2,"column":10,"nodeType":"275","messageId":"276","endLine":2,"endColumn":13},{"ruleId":"273","severity":1,"message":"311","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":20},{"ruleId":"315","severity":1,"message":"316","line":16,"column":8,"nodeType":"317","endLine":16,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":21,"column":8,"nodeType":"317","endLine":21,"endColumn":37},{"ruleId":"315","severity":1,"message":"316","line":27,"column":8,"nodeType":"317","endLine":27,"endColumn":57},{"ruleId":"315","severity":1,"message":"316","line":32,"column":10,"nodeType":"317","endLine":32,"endColumn":39},{"ruleId":"315","severity":1,"message":"316","line":37,"column":10,"nodeType":"317","endLine":37,"endColumn":39},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"318","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"277","line":2,"column":25,"nodeType":"275","messageId":"276","endLine":2,"endColumn":29},{"ruleId":"273","severity":1,"message":"319","line":9,"column":15,"nodeType":"275","messageId":"276","endLine":9,"endColumn":19},{"ruleId":"273","severity":1,"message":"318","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"277","line":2,"column":25,"nodeType":"275","messageId":"276","endLine":2,"endColumn":29},{"ruleId":"273","severity":1,"message":"319","line":6,"column":15,"nodeType":"275","messageId":"276","endLine":6,"endColumn":19},{"ruleId":"273","severity":1,"message":"284","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"269","replacedBy":"320"},{"ruleId":"271","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":11,"column":1,"nodeType":"324","endLine":40,"endColumn":3},{"ruleId":"273","severity":1,"message":"325","line":215,"column":9,"nodeType":"275","messageId":"276","endLine":215,"endColumn":18},{"ruleId":"326","severity":1,"message":"327","line":51,"column":2,"nodeType":"328","messageId":"329","endLine":51,"endColumn":15},{"ruleId":"273","severity":1,"message":"330","line":111,"column":9,"nodeType":"275","messageId":"276","endLine":111,"endColumn":21},{"ruleId":"273","severity":1,"message":"331","line":115,"column":8,"nodeType":"275","messageId":"276","endLine":115,"endColumn":26},{"ruleId":"332","severity":1,"message":"333","line":121,"column":32,"nodeType":"334","messageId":"335","endLine":121,"endColumn":33,"suggestions":"336"},{"ruleId":"332","severity":1,"message":"333","line":121,"column":57,"nodeType":"334","messageId":"335","endLine":121,"endColumn":58,"suggestions":"337"},{"ruleId":"273","severity":1,"message":"338","line":8,"column":20,"nodeType":"275","messageId":"276","endLine":8,"endColumn":28},{"ruleId":"273","severity":1,"message":"339","line":12,"column":7,"nodeType":"275","messageId":"276","endLine":12,"endColumn":26},{"ruleId":"273","severity":1,"message":"340","line":14,"column":7,"nodeType":"275","messageId":"276","endLine":14,"endColumn":18},{"ruleId":"341","severity":1,"message":"342","line":19,"column":2,"nodeType":"343","messageId":"344","endLine":81,"endColumn":3},{"ruleId":"273","severity":1,"message":"345","line":174,"column":7,"nodeType":"275","messageId":"276","endLine":174,"endColumn":19},{"ruleId":"346","severity":1,"message":"347","line":252,"column":5,"nodeType":"348","endLine":252,"endColumn":26,"suggestions":"349"},{"ruleId":"346","severity":1,"message":"350","line":256,"column":5,"nodeType":"348","endLine":256,"endColumn":16,"suggestions":"351"},{"ruleId":"273","severity":1,"message":"352","line":57,"column":6,"nodeType":"275","messageId":"276","endLine":57,"endColumn":14},{"ruleId":"273","severity":1,"message":"353","line":60,"column":8,"nodeType":"275","messageId":"276","endLine":60,"endColumn":12},{"ruleId":"354","severity":1,"message":"355","line":70,"column":51,"nodeType":"356","messageId":"291","endLine":70,"endColumn":53},{"ruleId":"354","severity":1,"message":"355","line":71,"column":50,"nodeType":"356","messageId":"291","endLine":71,"endColumn":52},{"ruleId":"273","severity":1,"message":"357","line":74,"column":8,"nodeType":"275","messageId":"276","endLine":74,"endColumn":16},{"ruleId":"341","severity":1,"message":"342","line":104,"column":2,"nodeType":"343","messageId":"344","endLine":115,"endColumn":3},{"ruleId":"341","severity":1,"message":"342","line":122,"column":2,"nodeType":"343","messageId":"344","endLine":133,"endColumn":3},{"ruleId":"322","severity":1,"message":"323","line":8,"column":1,"nodeType":"324","endLine":24,"endColumn":3},{"ruleId":"326","severity":1,"message":"327","line":23,"column":2,"nodeType":"328","messageId":"329","endLine":23,"endColumn":15},"no-native-reassign",["358"],"no-negated-in-lhs",["359"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'AddWareHouse' is defined but never used.","'AddProductCategory' is defined but never used.","'AddProduct' is defined but never used.","'Statistics' is defined but never used.",["358"],["359"],"'Component' is defined but never used.","'styled' is defined but never used.","'css' is defined but never used.","'Form' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["358"],["359"],"'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'Button' is defined but never used.","'setRedirectToReferrer' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'formActionDone' is assigned a value but never used.","'Redirect' is defined but never used.","'state' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","'categorySelectHandler' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'withRouter' is defined but never used.","'Sidebar' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'path' is assigned a value but never used.",["358"],["359"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'jsonValue' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'showPassword' is assigned a value but never used.","'toggleShowPassword' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["360","361"],["362","363"],"'arrToObj' is defined but never used.","'FORM_SPECIFIC_CHECK' is assigned a value but never used.","'SUBMIT_FORM' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'specificData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'formAction', 'formErrorMsg', 'inputItems', and 'specificCheck'. Either include them or remove the dependency array. If 'formAction' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["364"],"React Hook useEffect has a missing dependency: 'formStateGetter'. Either include it or remove the dependency array. If 'formStateGetter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["365"],"'timeUnit' is assigned a value but never used.","'test' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'weekDays' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"366","fix":"367","desc":"368"},{"messageId":"369","fix":"370","desc":"371"},{"messageId":"366","fix":"372","desc":"368"},{"messageId":"369","fix":"373","desc":"371"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},"removeEscape",{"range":"378","text":"379"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"380","text":"381"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"382","text":"379"},{"range":"383","text":"381"},"Update the dependencies array to be: [dispatch, formAction, formErrorMsg, formState.formId, formState.formIsSubmitted, formState.formValidity, formState.inputValidities, formState.inputValues, inputItems, specificCheck]",{"range":"384","text":"385"},"Update the dependencies array to be: [formState, formStateGetter]",{"range":"386","text":"387"},[2476,2477],"",[2476,2476],"\\",[2501,2502],[2501,2501],[8084,8105],"[dispatch, formAction, formErrorMsg, formState.formId, formState.formIsSubmitted, formState.formValidity, formState.inputValidities, formState.inputValues, inputItems, specificCheck]",[8185,8196],"[formState, formStateGetter]"]